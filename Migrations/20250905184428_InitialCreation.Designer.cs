// <auto-generated />
using System;
using EstoqueApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EstoqueApp.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20250905184428_InitialCreation")]
    partial class InitialCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EstoqueApp.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("EstoqueApp.Models.CostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("CostCenter", (string)null);
                });

            modelBuilder.Entity("EstoqueApp.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("CurrentStock");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Name");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("SKU");

                    b.Property<decimal>("UnitPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex(new[] { "Sku" }, "IX_Product_Sku")
                        .IsUnique();

                    b.ToTable("Product", null, t =>
                        {
                            t.HasCheckConstraint("CK_Product_CurrentStock_NonNegative", "[CurrentStock] >= 0");

                            t.HasCheckConstraint("CK_Product_UnitPrice_NonNegative", "[UnitPrice]   >= 0");
                        });
                });

            modelBuilder.Entity("EstoqueApp.Models.StockMovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateDate")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Notes")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Description");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Type");

                    b.Property<decimal>("UnitCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("UnitCost");

                    b.HasKey("Id");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("ProductId");

                    b.ToTable("StockMovements", null, t =>
                        {
                            t.HasCheckConstraint("CK_StockMovement_Quantity_Positive", "[Quantity] > 0");

                            t.HasCheckConstraint("CK_StockMovement_Type_Allowed", "[Type] IN ('In','Out')");

                            t.HasCheckConstraint("CK_StockMovement_UnitCost_NonNegative", "[UnitCost] >= 0");
                        });
                });

            modelBuilder.Entity("EstoqueApp.Models.Product", b =>
                {
                    b.HasOne("EstoqueApp.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Product_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EstoqueApp.Models.StockMovement", b =>
                {
                    b.HasOne("EstoqueApp.Models.CostCenter", "CostCenter")
                        .WithMany("Movements")
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Movement_CostCenter");

                    b.HasOne("EstoqueApp.Models.Product", "Product")
                        .WithMany("Movements")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Movement_Product");

                    b.Navigation("CostCenter");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EstoqueApp.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EstoqueApp.Models.CostCenter", b =>
                {
                    b.Navigation("Movements");
                });

            modelBuilder.Entity("EstoqueApp.Models.Product", b =>
                {
                    b.Navigation("Movements");
                });
#pragma warning restore 612, 618
        }
    }
}
