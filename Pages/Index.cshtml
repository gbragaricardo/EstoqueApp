@page
@model IndexModel
@{
    Layout = "~/Pages/Shared/_LayoutNovo.cshtml";
    ViewData["Title"] = "Dashboard";
}

<!-- Header da página -->
<div class="flex items-center justify-between mb-6">
    <div>
        <h1 class="text-4xl font-bold text-gray-800">Dashboard</h1>
        <p class="text-gray-500">Visão geral do estoque</p>
    </div>
</div>

<div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
    <div class="bg-white rounded-xl shadow p-6">
        <h5 class="text-sm text-gray-500">Total de Produtos</h5>
        <p class="text-3xl font-bold text-gray-900">@Model.TotalProducts</p>
        @*<p class="text-xs text-green-600 mt-1">+12% em relação ao mês anterior</p>*@    
    </div>

    <div class="bg-white rounded-xl shadow p-6">
        <h5 class="text-sm text-gray-500">Estoque Baixo</h5>
        <p class="text-3xl font-bold text-yellow-600">@Model.LowStockTotal</p>
        <p class="text-xs text-gray-500">Produtos com estoque crítico</p>
    </div>

    <div class="bg-white rounded-xl shadow p-6">
        <h5 class="text-sm text-gray-500">Sem Estoque</h5>
        <p class="text-3xl font-bold text-red-600">@Model.OutOfStock</p>
        <p class="text-xs text-gray-500">Produtos esgotados</p>
    </div>

    <div class="bg-white rounded-xl shadow p-6">
        <h5 class="text-sm text-gray-500">Valor Total</h5>
        <p class="text-3xl font-bold text-gray-900">@Model.TotalValue.ToString("C")</p>
        <p class="text-xs text-gray-500">Valor total do estoque</p>
    </div>
</div>

<div class="grid grid-cols-1 md:grid-cols-2 gap-4">


    <!-- Gráfico -->
    <div class="bg-white rounded-xl shadow p-6">
        <h5 class="font-semibold text-gray-700">Estoque Crítico</h5>
        <p class="text-sm text-gray-500 mb-4">Produtos sem estoque ou próximo do mínimo</p>

        @*  //TESTE PARA GRAFICO *@
        <canvas id="lowStockChart"></canvas>
    </div>


    @*//TESTE PARA ALERTAS*@
    <!-- Alertas -->
    <div class="bg-white rounded-xl shadow p-6">
        <h5 class="font-semibold text-gray-700">Alertas Recentes</h5>
        <p class="text-sm text-blue-600 mb-4">@Model.Alerts.Count alertas ativos no sistema</p>

        <div class="space-y-3">
            @foreach (var alert in Model.Alerts)
            {
                var bgClass = alert.Level == "high" ? "bg-red-50" :
                alert.Level == "medium" ? "bg-yellow-50" :
                "bg-green-50";

                var textClass = alert.Level == "high" ? "text-red-700" :
                alert.Level == "medium" ? "text-yellow-700" :
                "text-green-700";

                var badgeClass = alert.Level == "high" ? "bg-red-600" :
                alert.Level == "medium" ? "bg-yellow-500" :
                "bg-green-600";

                var badgeText = alert.Level == "high" ? "Alta" :
                alert.Level == "medium" ? "Média" :
                "Baixa";

                <div class="flex items-center justify-between p-3 rounded @bgClass">
                    <div>
                        <p class="text-sm font-semibold @textClass">@alert.ProductName</p>
                        <p class="text-xs text-gray-500">@alert.Message</p>
                    </div>
                    <span class="text-sm @badgeClass text-white px-2 py-1 rounded">@badgeText</span>
                </div>
            }
        </div>
    </div>
</div>



@*  //TESTE PARA GRAFICO *@

@using System.Text.Json
@{
    var productNames = JsonSerializer.Serialize(Model.LowStockProducts.Select(p => p.Name));
    var currentStock = JsonSerializer.Serialize(Model.LowStockProducts.Select(p => p.CurrentStock));
    var minStock = JsonSerializer.Serialize(Model.LowStockProducts.Select(p => p.MinStock));
}

@section Scripts {
    <script>
        const labels = @Html.Raw(productNames);
        const currentStock = @Html.Raw(currentStock);
        const minStock = @Html.Raw(minStock);

        new Chart(document.getElementById('lowStockChart'), {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Mínimo',
                        data: minStock,
                        backgroundColor: '#9CA3AF'
                    },
                    {
                        label: 'Atual',
                        data: currentStock,
                        backgroundColor: '#EF4444'
                    }
                ]
            },
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });
    </script>
}

